apiVersion: v1
kind: ConfigMap
metadata:
  name: s2i
  namespace: {{ default .Release.Namespace .Values.namespace }}
  labels:
    shipper.lingbohome.com/managed: "true"
    shipper.lingbohome.com/templated-by: "builder"
    template.shipper.lingbohome.com/version: "0.1.0"
    template.shipper.lingbohome.com/level: "system"
  annotations:
    kubesphere.io/alias-name: 源码构建镜像
    kubesphere.io/creator: system
    kubesphere.io/description: 基于源码构建镜像，支持云原生多语言构建
data:
  template.yaml: |-
     {{ .Files.Get "s2i-template-text.yaml" }}
  values.yaml: |
    buildType: "0"
  values.schema.json: |
    {
      "properties": {
        "buildType": {
          "description": "容器镜像的构建方式，支持传统的dockerfile和云原生构建两种方式",
          "title": "构建方式",
          "type": "string",
          "enum": [{
              "label": "云原生",
              "value": "0"
            },
            {
              "label": "Dockerfile",
              "value": "1"
            }
          ]
        },
        "sourceUrl": {
          "title": "代码仓库地址",
          "description": "一个代码仓库git url地址，目前仅支持公开仓库",
          "type": "string",
          "x-shipper-ui": {
            "placeholder": "github、gitlab、gitee都可以，只要平台可以顺利访问"
          }
        },
        "sourceRef": {
          "title": "代码分支",
          "description": "指定要构建的分支、Tag、Sha等",
          "type": "string",
          "x-shipper-ui": {
            "placeholder": "没有指定时，默认为”“，即表示按照代码仓库设定的默认分支构建"
          }
        },
        "sourceSubPath": {
          "title": "构建上下文",
          "description": "指定代码仓库下的目录作为构建上下文",
          "type": "string",
          "x-shipper-ui": {
            "placeholder": "没有指定时，默认为代码根目录”./“"
          }
        },
        "sourceDockerfilePath": {
          "title": "Dockerfile文件路径",
          "description": "指定代码仓库下Dockerfile文件的路径",
          "type": "string",
          "x-shipper-ui": {
            "placeholder": "没有指定时，默认为代码根目录下名为”./Dockerfile“的文件",
            "visibleIf":{
              "buildType":"1"
            }
          }
        }
      },
      "order": [
        "buildType",
        "sourceUrl",
        "sourceRef",
        "sourceSubPath",
        "sourceDockerfilePath"
      ],
      "required": [
        "sourceUrl",
        "buildType"
      ],
      "title": "Values",
      "type": "object"
    }    