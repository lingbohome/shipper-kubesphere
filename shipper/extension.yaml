apiVersion: kubesphere.io/v1alpha1
name: shipper
version: 0.1.0
displayName:
  zh: 云交付
  en: shipper
description:
  zh: 云交付（Shipper）是面向未来的云原生构建与交付平台，基于平台工程理念自助式、开箱即用的云原生 DevOps 平台，致力于让云原生应用的构建与交付，变得更简单、更高效，同时赋能产研、交付运维一体化高效协作，助力企业产品的业务价值快速高质量的交付给客户。
  en: Shipper is a future-oriented cloud-native build and delivery platform, based on the platform engineering concept of self-service, out-of-the-box cloud-native DevOps platform, committed to making the construction and delivery of cloud-native applications simpler, more efficient, and empowering production The integrated and efficient collaboration of R&D, delivery, and O&M helps the business value of enterprise products to be delivered to customers quickly and with high quality
category: integration-delivery
keywords:
  - DevOps
  - CI/CD
  - integration-delivery
home: https://github.com/lingbohome
sources:
  - https://github.com/lingbohome
kubeVersion: ">=1.20.0-0"
ksVersion: ">=4.0.0-0"
maintainers:
  - name: "lingbohome"
    email: "lingbo@lingbohome.com"
    url: "https://github.com/lingbohome"
provider:
  zh:
    name: "lingbohome"
    email: "lingbo@lingbohome.com"
    url: "https://github.com/lingbohome"
  en:
    name: "lingbohome"
    email: "lingbo@lingbohome.com"
    url: "https://github.com/lingbohome"
icon: ./static/logo-color.png
screenshots:
  - ./static/screenshots/screenshot02.png
  - ./static/screenshots/screenshot02.png
  - ./static/screenshots/screenshot03.png
  - ./static/screenshots/screenshot04.jpg
  - ./static/screenshots/screenshot05.png
  - ./static/screenshots/screenshot05.png
  - ./static/screenshots/screenshot05.png            
dependencies:
  - name: ui
    tags:
    - extension
  - name: server
    tags:
    - extension
  - name: worker
    condition: worker.enabled
    tags:
    - extension     
# installationMode describes how to install subcharts, it can be HostOnly or Multicluster.
# In Multicluster mode, the subchart with tag `extension` will only be deployed to the host cluster,
# and the subchart with tag `agent` will be deployed to all selected clusters.
installationMode: HostOnly
# Custom namespace example: If not specified, it will be installed in the namespace named extension-{name}.
#namespace: ""
# external dependencies example
#externalDependencies:
#  - name: a
#    type: extension
#    version: ">= 2.6.0"
#    required: true
#  - name: b
#    type: extension
#    version: ">= 2.2.0"
#    required: true
# Add init containers to the extension installation job to execute custom tasks (eg: CRDs upgrade).
# Support unified or separate configuration of init container image for each stage.
#annotations:
#  executor-hook-image.kubesphere.io: ...
#  executor-hook-image.kubesphere.io/install: ...
#  executor-hook-image.kubesphere.io/upgrade: ...
#  executor-hook-image.kubesphere.io/uninstall: ...
